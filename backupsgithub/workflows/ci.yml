name: CI_CALIDAD_SOFTWARE
# 🚀 Integración Continua para validar calidad y build del proyecto

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  # 🔁 Ejecuta en pushes a main y en PRs hacia main

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true
  # 🧠 Evita ejecuciones duplicadas en la misma rama

jobs:
  build-and-test:
    name: 🔨 Build & 🧪 Test (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      CI: true
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🧰 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
          # 💾 Cache de dependencias para acelerar ejecuciones

      - name: 📦 Install dependencies (npm ci)
        run: npm ci
        # Usa package-lock para instalaciones reproducibles

      - name: 🧠 Type check (TS)
        run: npm run type-check

      - name: 🔍 Lint (ESLint)
        run: npm run lint

      - name: 🧪 Run tests (Jest)
        run: npm test -- --ci

      - name: 🏗️ Build (Vite)
        run: npm run build

      - name: 📤 Upload production build (artifact)
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: dist-node-${{ matrix.node-version }}
          path: dist
